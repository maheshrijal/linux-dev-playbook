---
- name: Setup my workstation
  hosts: localhost
  connection: local
  become: true

  vars_files:
    - vars/main.yml

  handlers:
    - name: Reload /etc/profile
      ansible.builtin.import_tasks: handlers/main.yml

  pre_tasks:
    - name: Update package caches if required (Debian)
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"

    - name: Update package caches if required (RedHat)
      ansible.builtin.yum:
        update_cache: true
        # cache_valid_time: 3600
      when: ansible_os_family == "RedHat"

  tasks:
    - name: Debug download_dir
      ansible.builtin.debug:
        msg: "{{ download_dir }}"

    - name: Install tools
      ansible.builtin.include_tasks:
        file: tasks/install-tools.yml

    - name: Install AWS CLI v2
      ansible.builtin.include_tasks:
        file: tasks/awscli.yml

    - name: Install Go
      ansible.builtin.include_tasks:
        file: tasks/go.yml
      ignore_errors: true

    - name: Install Terraform
      ansible.builtin.include_tasks:
        file: tasks/terraform.yml

    - name: Create SSH directory
      ansible.builtin.file:
        path: "~/.ssh"
        state: directory
        mode: "0700"
      become: false

    - name: Generate SSH key
      community.crypto.openssh_keypair:
        path: "~/.ssh/{{ key_name }}"
        comment: "{{ email }}"
        type: ed25519
        force: false
        mode: "0600"
      register: ssh_key
      become: false

    - name: Add SSH key to ssh agent
      ansible.builtin.lineinfile:
        path: ~/.bashrc
        line: "eval $(ssh-agent) && ssh-add ~/.ssh/{{ key_name }}"
        create: true
        insertafter: EOF
        backup: true
      become: false

    - name: Lookup SSH key & store in variable
      ansible.builtin.set_fact:
        ssh_key_pub: "{{ lookup('file', '~/.ssh/{{ key_name }}.pub') }}"
      become: false

    - name: Configure GIT to use SSH key
      ansible.builtin.shell: |
          git config --global gpg.format ssh
          git config --global user.email "{{ email }}"
          git config --global user.name "maheshrjl"
          git config --global core.editor "vim"
          git config --global user.signingkey "{{ ssh_key_pub }}"
          git config --global commit.gpgsign true
          git config --global tag.gpgsign true
      become: false

    - name: Print SSH key
      ansible.builtin.debug:
        msg: "{{ ssh_key_pub }}"
      become: false
